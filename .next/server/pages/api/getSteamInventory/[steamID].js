"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/getSteamInventory/[steamID]";
exports.ids = ["pages/api/getSteamInventory/[steamID]"];
exports.modules = {

/***/ "node-html-parser":
/*!***********************************!*\
  !*** external "node-html-parser" ***!
  \***********************************/
/***/ ((module) => {

module.exports = import("node-html-parser");;

/***/ }),

/***/ "(api)/./pages/api/getSteamInventory/[steamID].js":
/*!**************************************************!*\
  !*** ./pages/api/getSteamInventory/[steamID].js ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var node_html_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-html-parser */ \"node-html-parser\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([node_html_parser__WEBPACK_IMPORTED_MODULE_0__]);\nnode_html_parser__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst handleSteamInventory = async (req, res1)=>{\n    let { steamID  } = req.query;\n    // fetch with headers\n    const options = {\n        method: \"GET\",\n        headers: {\n            \"X-RapidAPI-Host\": \"proxy12.p.rapidapi.com\",\n            \"X-RapidAPI-Key\": \"45d8aec96cmsh5f3d170aa40cd67p1385a5jsnc0f1f777b855\"\n        }\n    };\n    if (isNaN(steamID)) {\n        const response = await fetch(`http://api.steampowered.com/ISteamUser/ResolveVanityURL/v0001/?key=1F5DA66635EB64163975BFB0BA76761C&vanityurl=${steamID}`);\n        const data = await response.json();\n        steamID = data.response.steamid;\n    }\n    const requests = [\n        fetch(`https://proxy12.p.rapidapi.com/proxy?url=https%3A%2F%2Fsteamcommunity.com%2Fprofiles%2F${steamID}%2Finventory%2Fjson%2F730%2F2%2F`, options).then((res)=>res.json()\n        ),\n        fetch(`http://csgobackpack.net/api/GetItemsList/v2/`).then((res)=>res.json()\n        )\n    ];\n    const [inventoryData, allItemPriceData] = await Promise.all(requests);\n    const inventory_data = JSON.parse(inventoryData.body);\n    console.log(\"inventory_data\", typeof inventory_data);\n    // console.log(\"Data\", data)\n    // console.log(\"Data2\", data2) \n    const rgInventory = inventory_data.rgInventory;\n    const rgDescriptions = inventory_data.rgDescriptions;\n    var inventory = {};\n    for(let key1 in rgInventory){\n        // turn rgDescriptions[`${rgInventory[key].classid}_${rgInventory[key].instanceid}`].market_hash_name into a url\n        var market_hash_name = rgDescriptions[`${rgInventory[key1].classid}_${rgInventory[key1].instanceid}`].market_hash_name;\n        market_hash_name = market_hash_name.replace(/'/g, \"&#39\");\n        var newobj = {\n            rgInventory: rgInventory[key1],\n            rgDescriptions: rgDescriptions[`${rgInventory[key1].classid}_${rgInventory[key1].instanceid}`]\n        };\n        if (allItemPriceData.items_list[market_hash_name]) {\n            newobj.rdCsgoBackpack = allItemPriceData.items_list[market_hash_name];\n        }\n        inventory[key1] = newobj;\n    }\n    var inspectStrings = {};\n    Object.entries(inventory).forEach(([key, value])=>{\n        // if value has market_actions do something\n        if (value.rgDescriptions.market_actions) {\n            // steam://rungame/730/{steamid}/+csgo_econ_action_preview%20S{???}A{}D9947022367688543261\n            // replace assetid with the assetid\n            var mangled_link = value.rgDescriptions.market_actions[0].link;\n            // split mangled_link into an array\n            var D_var = mangled_link.split(\"%D\")[1];\n            var link = `steam://rungame/730/76561202255233023/+csgo_econ_action_preview%20S${steamID}A${key}D${D_var}`;\n            inspectStrings[key] = link;\n        }\n    });\n    const csgoFloatRequests = Object.entries(inspectStrings).map(([key, value])=>{\n        // console.log(\"key\", key)\n        // console.log(\"value\", value)\n        return fetch(`http://api.csgofloat.com/?url=${value}`).then(async (res)=>{\n            return {\n                [key]: await res.json()\n            };\n        });\n    });\n    const paintData = await Promise.all(csgoFloatRequests);\n    paintData.forEach((paintDataObject)=>{\n        const [key, value] = Object.entries(paintDataObject)[0];\n        inventory[key].rdCsgoFloat = value;\n        if (inventory[key].rgDescriptions.descriptions[inventory[key].rgDescriptions.descriptions.length - 1].value.toLowerCase().includes(\"sticker\")) {\n            let dummy = (0,node_html_parser__WEBPACK_IMPORTED_MODULE_0__.parse)(inventory[key].rgDescriptions.descriptions[inventory[key].rgDescriptions.descriptions.length - 1].value);\n            let image_list = dummy.querySelectorAll(\"img\");\n            // get the url from each image\n            for(var i = 0; i < value.iteminfo.stickers.length; i++){\n                inventory[key].rdCsgoFloat.iteminfo.stickers[i].sticker_url = image_list[i].getAttribute(\"src\");\n                if (allItemPriceData.items_list[\"Sticker | \" + value.iteminfo.stickers[i].name]) {\n                    inventory[key].rdCsgoFloat.iteminfo.stickers[i].sticker_price = allItemPriceData.items_list[\"Sticker | \" + value.iteminfo.stickers[i].name].price;\n                }\n            }\n        }\n    });\n    res1.status(200).json(inventory);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handleSteamInventory);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/getSteamInventory/[steamID].js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/getSteamInventory/[steamID].js"));
module.exports = __webpack_exports__;

})();